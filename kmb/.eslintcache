[{"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\index.js":"1","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\reportWebVitals.js":"2","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\routes.js":"3","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppState.js":"4","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppContext.js":"5","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppReducer.js":"6","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\types.js":"7","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\hoc\\ProtectedRoute.js":"8","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Header\\index.js":"9","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\CreateProfile\\index.js":"10","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Analytics\\index.js":"11","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Login\\index.js":"12","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Tasks\\index.js":"13","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Home\\index.js":"14","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\SignUp\\index.js":"15","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Profile\\index.js":"16","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\hooks\\useLocalStorage.js":"17","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\httpRequests.js":"18","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\inputs.js":"19","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard.js":"20","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskRoller.js":"21","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\NewTaskForm.js":"22","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CountdownTimer.js":"23","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard\\EditableTaskCard.js":"24","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CheckboxOptions.js":"25","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard\\SelectableTaskCard.js":"26","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\SelectRandomTask.js":"27","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\EditTask.js":"28","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CustomPopover.js":"29","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\SearchBar.js":"30","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskList.js":"31","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskFilter.js":"32","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Task\\index.js":"33"},{"size":733,"mtime":1614916310752,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1606676319960,"results":"36","hashOfConfig":"35"},{"size":1073,"mtime":1629050748669,"results":"37","hashOfConfig":"35"},{"size":2397,"mtime":1624232262257,"results":"38","hashOfConfig":"35"},{"size":107,"mtime":1611098590920,"results":"39","hashOfConfig":"35"},{"size":1083,"mtime":1624232262249,"results":"40","hashOfConfig":"35"},{"size":270,"mtime":1624232262258,"results":"41","hashOfConfig":"35"},{"size":572,"mtime":1615777508908,"results":"42","hashOfConfig":"35"},{"size":3859,"mtime":1629137680158,"results":"43","hashOfConfig":"35"},{"size":294,"mtime":1624232262154,"results":"44","hashOfConfig":"35"},{"size":88,"mtime":1623382699718,"results":"45","hashOfConfig":"35"},{"size":4386,"mtime":1628974817541,"results":"46","hashOfConfig":"35"},{"size":4057,"mtime":1629331481441,"results":"47","hashOfConfig":"35"},{"size":6254,"mtime":1624232262163,"results":"48","hashOfConfig":"35"},{"size":4418,"mtime":1624232262190,"results":"49","hashOfConfig":"35"},{"size":86,"mtime":1623382699743,"results":"50","hashOfConfig":"35"},{"size":1278,"mtime":1614916310751,"results":"51","hashOfConfig":"35"},{"size":1912,"mtime":1623382699758,"results":"52","hashOfConfig":"35"},{"size":517,"mtime":1614916310749,"results":"53","hashOfConfig":"35"},{"size":1064,"mtime":1623382699708,"results":"54","hashOfConfig":"35"},{"size":3143,"mtime":1614287326782,"results":"55","hashOfConfig":"35"},{"size":5404,"mtime":1624232262152,"results":"56","hashOfConfig":"35"},{"size":531,"mtime":1614290562176,"results":"57","hashOfConfig":"35"},{"size":1912,"mtime":1623382699718,"results":"58","hashOfConfig":"35"},{"size":1282,"mtime":1624232262129,"results":"59","hashOfConfig":"35"},{"size":1132,"mtime":1623382699718,"results":"60","hashOfConfig":"35"},{"size":622,"mtime":1612296762463,"results":"61","hashOfConfig":"35"},{"size":91,"mtime":1623382699708,"results":"62","hashOfConfig":"35"},{"size":1658,"mtime":1629132519942,"results":"63","hashOfConfig":"35"},{"size":1293,"mtime":1629131563048,"results":"64","hashOfConfig":"35"},{"size":2011,"mtime":1629127685179,"results":"65","hashOfConfig":"35"},{"size":1314,"mtime":1629131519920,"results":"66","hashOfConfig":"35"},{"size":197,"mtime":1629329784055,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"13sypig",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\index.js",[],["149","150"],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\reportWebVitals.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\routes.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppState.js",["151","152"],"import { useEffect, useReducer } from 'react';\r\n\r\nimport AppContext from './AppContext';\r\nimport AppReducer from './AppReducer';\r\nimport { ADD_TASK, DELETE_TASK, NEW_CURRENT_TASK, SET_GEN_DATA, SET_USER, SET_USER_DATA } from './types';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst AppState = (props) => {\r\n  let initialState = {\r\n    currentTask: null,\r\n    genData: null,\r\n    user: null,\r\n    userData: null,\r\n    tasks: [],\r\n  };\r\n\r\n  // No reason to use the dispatch yet,\r\n  // Refer to this article as a resource: https://medium.com/javascript-in-plain-english/how-to-use-react-context-api-with-functional-component-472f1d5e0851\r\n\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const addTask = (task) => {\r\n    dispatch({ type: ADD_TASK, payload: task })\r\n  }\r\n\r\n  const deleteTask = (task) => {\r\n    dispatch({ type: DELETE_TASK, payload: task })\r\n  }\r\n\r\n  const newCurrentTask = (task) => {\r\n    dispatch({ type: NEW_CURRENT_TASK, payload: task })\r\n  }\r\n  \r\n  const setGenData = (task) => {\r\n    dispatch({ type: SET_GEN_DATA, payload: task })\r\n  }\r\n\r\n  const setUser = (task) => {\r\n    dispatch({ type: SET_USER, payload: task })\r\n  }\r\n  \r\n  const setUserData = (task) => {\r\n    dispatch({ type: SET_USER_DATA, payload: task })\r\n  }\r\n  /* \r\n  useEffect(() => {\r\n    const genFetches = async () => {\r\n      let [resGenData] = await Promise.all([\r\n        fetch(API_URL + '/GenData').then(res => res.json())\r\n      ]).catch(err => console.log(err))\r\n\r\n      setGenData(resGenData);\r\n    }\r\n    genFetches();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (state.user === null || state.user === undefined) {\r\n      return;\r\n    }\r\n    const userFetches = async () => {\r\n      let [resUserData] = await Promise.all([\r\n        fetch(API_URL + '/UserData').then(res => res.json())\r\n      ]).catch(err => console.log(err))\r\n\r\n      setUserData(resUserData);\r\n    }\r\n    userFetches();\r\n  }, [state.user])\r\n  /* */\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        currentTask: state.currentTask,\r\n        genData: state.genData,\r\n        user: state.user,\r\n        userData: state.userData,\r\n        tasks: state.tasks,\r\n        addTask,\r\n        deleteTask,\r\n        newCurrentTask,\r\n        setGenData,\r\n        setUser,\r\n        setUserData\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppState;","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppContext.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppReducer.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\types.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\hoc\\ProtectedRoute.js",["153"],"import { Route, Redirect } from 'react-router-dom';\r\n\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\nconst ProtectedRoute = ({ component: Component, rest }) => {\r\n  const [accessToken, setAccessToken] = useLocalStorage('token', null);\r\n\r\n  return (\r\n    <Route render={\r\n      rest => {\r\n        if (accessToken) {\r\n          return <Component {...rest} />\r\n        } else {\r\n          return <Redirect to={\r\n            {\r\n              pathname: '/login'\r\n            }\r\n          } />\r\n        }\r\n      }\r\n    } />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Header\\index.js",["154","155","156","157","158","159","160","161","162","163","164"],"import { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport CustomPopover from '../../components/CustomPopover';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      position: 'relative',\r\n      zIndex: 1400\r\n\r\n    },\r\n    appBar: {\r\n      backgroundColor: '#4DBD0C'\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      width: 200,\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n      },\r\n    },\r\n    navButtons: {\r\n      marginLeft: '2%',\r\n      width: '100%',\r\n      float: 'left',\r\n    },\r\n    navButton: {\r\n      color: 'white',\r\n      '&:focus': {\r\n        border: '1px solid black',\r\n        color: 'black',\r\n      },\r\n    },\r\n    profileButton: {\r\n      backgroundColor: 'white'\r\n    },\r\n    selectAction: {\r\n      display: \"flex\",\r\n      flexFlow: \"column wrap\",\r\n    },\r\n  });\r\n\r\n  const actions = ['Profile', 'Logout']\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  // Seems weird but I'm trying to get rerender to happen when\r\n  // localStorage value changes and that isn't happening on its own.\r\n  // Maybe using state after localstorage will do it...\r\n  const [accessToken, setAccessToken] = useLocalStorage('token', null);\r\n\r\n  const handleNavigation = (route) => {\r\n    history.push(route);\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    setAccessToken(null);\r\n    history.push(\"/login\");\r\n    // TODO: need to implement unvalidateUser action (actually just change the name to reflect the new actions use of logging in, validating, with an access token\r\n    // and logging out, unvalidating, by setting access_token to null)\r\n  }\r\n\r\n  const handleAccountClick = (event) => {\r\n    console.log(event.target)\r\n    console.log(event.currentTarget)\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title} onClick={() => handleNavigation('/')}>\r\n            Keep Me Busy!\r\n          </Typography>\r\n          {accessToken ? (\r\n            <div className={classes.navButtons}>\r\n              <Button\r\n                onClick={() => handleNavigation('/analytics')}\r\n                className={classes.navButton}\r\n              >\r\n                Analytics\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleNavigation('/profile')}\r\n                className={classes.navButton}\r\n              >\r\n                Profile\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleNavigation('/tasks')}\r\n                className={classes.navButton}\r\n              >\r\n                Tasks\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          {accessToken !== null ?\r\n          <div>\r\n            <Button className={classes.navButton} variant='outlined' onClick={handleLogout}>Logout</Button>\r\n          </div>\r\n            :\r\n              null\r\n            }\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\CreateProfile\\index.js",["165","166","167","168"],"import { useContext, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n\r\n  }\r\n})\r\n\r\nexport default function CreateProfile() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  )\r\n}","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Analytics\\index.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Login\\index.js",["169","170"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport AppContext from '../../context/AppContext';\r\n\r\nimport { PostData } from '../../helpers/httpRequests';\r\nimport { isNullOrEmptyOrWhitespace } from '../../helpers/inputs';\r\n\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: 'center',\r\n    padding: 100,\r\n  },\r\n  card: {\r\n    margin: 'auto',\r\n    width: '30%',\r\n    boxShadow: '10px 10px 10px 10px grey',\r\n  },\r\n  textFields: {\r\n    padding: 10,\r\n  },\r\n  submitButton: {\r\n    padding: 10,\r\n  },\r\n  signuplink: {\r\n    margin: 30,\r\n    color: 'blue',\r\n    textDecoration: 'underline',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    }\r\n  }\r\n});\r\n\r\nexport default function Login() {\r\n  let appContext = useContext(AppContext);\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    username: null,\r\n    password: null,\r\n    alert: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (values.alert === null) {\r\n      return;\r\n    }\r\n    toast[values.alert.type](values.alert.message);\r\n    setTimeout(() => {\r\n      setValues({\r\n        ...values,\r\n        alert: null,\r\n      });\r\n    }, 1000);\r\n  }, [values.alert]);\r\n\r\n  const [accessToken, setAccessToken] = useLocalStorage('token', null);\r\n\r\n  const handleLogin = () => {\r\n    if (accessToken) {\r\n      history.push(\"/\");\r\n      return;\r\n    } \r\n\r\n    if (isNullOrEmptyOrWhitespace(values.username)) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Username is not entered!' }\r\n      });\r\n      return;\r\n    } else if (isNullOrEmptyOrWhitespace(values.password)) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Password is not entered!' }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (values.username === 'fakename' && values.password === 'fakepassword') {\r\n      appContext.setUser({ USERNAME: values.username, PASSWORD: values.password })\r\n      login();\r\n      return;\r\n    }\r\n    \r\n    PostData('someURL', { USERNAME: values.username, PASSWORD: values.password })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.length === 1) {\r\n          appContext.setUser(res);\r\n          login();\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            alert: { type: 'error', message: 'Error occurred. Try again.' }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  const login = () => {\r\n    setAccessToken(true);\r\n    history.push('/');\r\n  }\r\n\r\n  const handleSignUp = () => {\r\n    history.push(\"/signup\");\r\n  }\r\n\r\n  if (accessToken) {\r\n    handleLogin();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <ToastContainer\r\n      position='bottom-left'\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={true}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n    />\r\n      <Card className={classes.card}>\r\n        <div className={classes.textFields}>\r\n          <TextField\r\n            value={values.username}\r\n            onChange={(e) => setValues({ ...values, username: e.target.value })}\r\n            label=\"Username\"\r\n            type=\"search\"\r\n            variant=\"outlined\"\r\n            />\r\n        </div>\r\n        <div className={classes.textFields}>\r\n          <TextField\r\n            value={values.password}\r\n            onChange={(e) => setValues({ ...values, password: e.target.value })}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            />\r\n        </div>\r\n        <div className={classes.submitButton}>\r\n          <Button \r\n            onClick={handleLogin}\r\n            variant=\"contained\"\r\n            >Login</Button>\r\n        </div>\r\n      </Card>\r\n      <div className={classes.signuplink} onClick={handleSignUp}>\r\n        No account? Sign Up!\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Tasks\\index.js",["171","172","173","174","175","176","177","178","179"],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Home\\index.js",["180","181","182"],"import { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport NewTaskForm from '../../components/NewTaskForm';\r\nimport TaskRoller from '../../components/TaskRoller';\r\nimport CountdownTimer from '../../components/CountdownTimer';\r\nimport CheckboxOptions from '../../components/CheckboxOptions';\r\n\r\nimport AppContext from '../../context/AppContext';\r\nimport { PostData } from '../../helpers/httpRequests';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: 'center',\r\n    fontFamily: 'sans-serif',\r\n    fontSize: '30px',\r\n    height: '100%',\r\n  },\r\n  row: {\r\n    width: '100%',\r\n    height: 500,\r\n  },\r\n  options: {\r\n    marginLeft: '30%',\r\n    marginRight: '30%'\r\n  },\r\n  currentTaskColumn: {\r\n    backgroundColor: 'white',\r\n    borderRadius: '1.5rem',\r\n  },\r\n  currentTaskButtons: {},\r\n  currentTaskButtonC: {\r\n    margin: 10,\r\n    backgroundColor: 'green',\r\n    color: 'white',\r\n  },\r\n  currentTaskButtonF: {\r\n    margin: 10,\r\n    backgroundColor: 'red',\r\n    color: 'white',\r\n  },\r\n});\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const appContext = useContext(AppContext);\r\n\r\n  const [values, setValues] = useState({\r\n    taskNum: null,\r\n    duration: 60,\r\n    Anytime: false,\r\n    Morning: false,\r\n    Afternoon: false,\r\n    Night: false,\r\n    tod: [],\r\n    alert: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (values.alert === null) {\r\n      return;\r\n    }\r\n    toast[values.alert.type](values.alert.message);\r\n    setTimeout(() => {\r\n      setValues({\r\n        ...values,\r\n        alert: null,\r\n      });\r\n    }, 1000);\r\n  }, [values.alert]);\r\n\r\n  const handleDurationChange = (e, newValue) => {\r\n    setValues({\r\n      ...values,\r\n      duration: newValue,\r\n    });\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    if (!appContext.tasks) {\r\n      // Alert the user there is no tasks\r\n    } else {\r\n      let tod = [];\r\n\r\n      if (values.morning) {\r\n        tod.push('morning');\r\n      }\r\n      if (values.afternoon) {\r\n        tod.push('afternoon');\r\n      }\r\n      if (values.night) {\r\n        tod.push('night');\r\n      }\r\n      if (values.anytime) {\r\n        tod.push('anytime');\r\n      }\r\n\r\n      setValues({\r\n        ...values,\r\n        tod: tod,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTaskStatus = (status) => {\r\n    // status is a string, either \"completed\" or \"failed\"\r\n    let data = {};\r\n    data.user = appContext.user;\r\n    data.task = appContext.currentTask;\r\n    data.status = status;\r\n    PostData('someURL', data)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.length === 1) {\r\n          setValues({\r\n            ...values,\r\n            alert: { type: 'success', message: 'Task log recorded!' }\r\n          });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            alert: { type: 'error', message: 'Task log not recorded!' }\r\n          });\r\n        }\r\n      })\r\n\r\n    appContext.newCurrentTask(null);\r\n    /*  Need to make a task logged fetch request here,\r\n        record the task, the completion status, time left if failed, time left if completed,\r\n        current time */\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ToastContainer\r\n        position='bottom-left'\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={true}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <h1>Wondering what to do right now?</h1>\r\n      <div className={classes.row}>\r\n        {/*appContext.currentTask === null && values.taskTime ? (\r\n            <TaskRoller duration={values.duration} tod={values.tod} />\r\n        ) : ( */}\r\n            <div className={classes.options}>\r\n              <Slider\r\n                min={0}\r\n                step={30}\r\n                max={300}\r\n                marks\r\n                value={values.duration}\r\n                onChange={handleDurationChange}\r\n                valueLabelDisplay='auto'\r\n              />\r\n              <CheckboxOptions\r\n                row={true}\r\n                catchAllLabel='Anytime'\r\n                valueLabels={['Anytime', 'Morning', 'Afternoon', 'Night']}\r\n                values={values}\r\n                setValues={setValues}\r\n              />\r\n              <Button\r\n                disabled={\r\n                  appContext.tasks.length === 0 ||\r\n                  values.duration === 0 ||\r\n                  (values.anytime === false &&\r\n                    values.morning === false &&\r\n                    values.afternoon === false &&\r\n                    values.night === false)\r\n                }\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={handleClick}\r\n              >\r\n                Give me something to do!\r\n              </Button>\r\n            </div>\r\n      </div>\r\n      <div className={classes.row}>\r\n        {/* TODO: Timer over here with last task, if ongoing - time is counting down from the initial time that was given when created,\r\n            if ongoing (and 'Click Me' is pressed) - a red 'X' appears over the timer and task is reported as incompleted \r\n          if done (timer expired) - green checkmark shows and task is reported as completed*/}\r\n        {appContext.currentTask !== null ? (\r\n          <div className={classes.currentTaskColumn}>\r\n            <div>\r\n              <CountdownTimer time={appContext.currentTask.minutes} />\r\n            </div>\r\n            <div className={classes.currentTaskButtons}>\r\n              <Button\r\n                className={classes.currentTaskButtonC}\r\n                onClick={() => handleTaskStatus('completed')}\r\n              >\r\n                Completed\r\n              </Button>\r\n              <Button\r\n                className={classes.currentTaskButtonF}\r\n                onClick={() => handleTaskStatus('failed')}\r\n              >\r\n                Failed\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\SignUp\\index.js",["183","184","185"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button'; \r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport AppContext from '../../context/AppContext';\r\n\r\nimport { PostData } from '../../helpers/httpRequests';\r\nimport { isNullOrEmptyOrWhitespace } from '../../helpers/inputs';\r\n\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: 'center',\r\n    padding: 100,\r\n  },\r\n  card: {\r\n    margin: 'auto',\r\n    width: '30%',\r\n    boxShadow: '10px 10px 10px grey',\r\n  },\r\n  textFields: {\r\n    padding: 10,\r\n  },\r\n  submitButton: {\r\n    padding: 10,\r\n  }\r\n});\r\n\r\nexport default function SignUp() {\r\n  let appContext = useContext(AppContext);\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    username: null,\r\n    password: null,\r\n    password2: null,\r\n    alert: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (values.alert === null) {\r\n      return;\r\n    }\r\n    toast[values.alert.type](values.alert.message);\r\n    setTimeout(() => {\r\n      setValues({\r\n        ...values,\r\n        alert: null,\r\n      });\r\n    }, 1000);\r\n  }, [values.alert]);\r\n\r\n  const [accessToken, setAccessToken] = useLocalStorage('token', null);\r\n\r\n  const handleSignUp = () => {\r\n    if (accessToken) {\r\n      history.push(\"/\");\r\n    } \r\n\r\n    if (isNullOrEmptyOrWhitespace(values.username)) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Username is not entered!' }\r\n      });\r\n      return; \r\n    } else if (isNullOrEmptyOrWhitespace(values.password)) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Password is not entered!' }\r\n      });\r\n      return; \r\n    } else if (isNullOrEmptyOrWhitespace(values.password2)) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Confirm Password is not entered!' }\r\n      });\r\n      return; \r\n    } else if (values.password !== values.password2) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Passwords do not patch!' }\r\n      });\r\n      return; \r\n    }\r\n    \r\n    PostData('someURL', { USERNAME: values.username, PASSWORD: values.password })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          history.push('/createProfile');\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            alert: { type: 'error', message: 'Error occurred. Try again.' }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  if (accessToken) {\r\n    handleSignUp();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ToastContainer\r\n        position='bottom-left'\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={true}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Card className={classes.card}>\r\n        <div className={classes.textFields}>\r\n          <TextField\r\n            value={values.username}\r\n            onChange={(e) => setValues({ ...values, username: e.target.value })}\r\n            label=\"Username\"\r\n            type=\"search\"\r\n            variant=\"outlined\"\r\n            />\r\n        </div>\r\n        <div className={classes.textFields}>\r\n          <TextField\r\n            value={values.password}\r\n            onChange={(e) => setValues({ ...values, password: e.target.value })}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            />\r\n        </div>\r\n        <div className={classes.textFields}>\r\n          <TextField\r\n            value={values.password2}\r\n            onChange={(e) => setValues({ ...values, password2: e.target.value })}\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            />\r\n        </div>\r\n        <div className={classes.submitButton}>\r\n          <Button \r\n            onClick={handleSignUp}\r\n            variant=\"contained\"\r\n            >Sign Up</Button>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Profile\\index.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\httpRequests.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\inputs.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskRoller.js",["186"],"import { useContext, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport AppContext from '../context/AppContext';\r\n\r\nimport { RandomTask } from '../helpers/SelectRandomTask';\r\n\r\n/**\r\n * Design Goals:\r\n *  - Need to have accept reject buttons span 100% across the card, dividing card in half\r\n *  - Have card centered\r\n *  - \r\n */\r\nconst useStyles = makeStyles({\r\n  root: {\r\n\r\n  },\r\n  accept: {\r\n    backgroundColor: 'green',\r\n    color: 'white'\r\n  },\r\n  reject: {\r\n    backgroundColor: 'red',\r\n    color: 'white'\r\n  }\r\n})\r\n\r\nexport default function TaskRoller({ duration, tod }) {\r\n  const classes = useStyles();\r\n  const appContext = useContext(AppContext);\r\n\r\n  const [values, setValues] = useState({\r\n    tasks: null,\r\n    taskNo: 0,\r\n  })\r\n\r\n  const handleAccept = () => {\r\n    let task = values.tasks[values.taskNo];\r\n    appContext.newCurrentTask(task);\r\n  }\r\n\r\n  const handleReject = () => {\r\n    setValues({\r\n      ...values,\r\n      taskNo: values.taskNo + 1,\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    let theTasks = RandomTask(appContext.tasks, duration, tod);\r\n    setValues({\r\n      ...values,\r\n      tasks: theTasks,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {values.tasks ?\r\n        values.taskNo !== values.tasks.length ?\r\n          <div>\r\n            <Card className={classes.root}>\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" >\r\n                  {values.tasks[values.taskNo].taskName}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {values.tasks[values.taskNo].minutes} minutes\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {values.tasks[values.taskNo].notes}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <IconButton className={classes.accept} onClick={handleAccept} color=\"primary\" aria-label=\"check\" component=\"span\">\r\n                  <DoneOutlineIcon />\r\n                </IconButton>\r\n                <IconButton className={classes.reject} onClick={handleReject} color=\"secondary\" aria-label=\"check\" component=\"span\">\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </CardActions>\r\n            </Card>\r\n          </div>\r\n          : \r\n          <div>\r\n            <Card className={classes.root}>\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  There are no more tasks available with these filters.\r\n                  Go read a book.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        : null\r\n      }\r\n    </>\r\n  )\r\n}","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\NewTaskForm.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CountdownTimer.js",["187"],"import { useState, useEffect, useContext } from 'react';\r\n\r\nexport default function CountdownTimer({ time }) {\r\n    const [timeLeft, setTimeLeft] = useState(time * 60);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setTimeLeft(timeLeft => timeLeft - 1);\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {Math.floor(timeLeft / 60)}:{(timeLeft % 60) < 10 ? '0' + (timeLeft % 60) : timeLeft % 60}\r\n        </div>\r\n    )\r\n}","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard\\EditableTaskCard.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CheckboxOptions.js",["188","189","190"],"import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function CheckboxOptions({ row, catchAllLabel, valueLabels, values, setValues }) {\r\n  const handleChange = e => {\r\n    if (e.target.name === catchAllLabel) {\r\n      let newValues = {}\r\n      valueLabels.forEach(vLabel => newValues[vLabel] = e.target.checked);\r\n      setValues({\r\n        ...values,\r\n        ...newValues\r\n      });\r\n    } else {\r\n      if (values[catchAllLabel]) {\r\n        setValues({\r\n          ...values,\r\n          [catchAllLabel]: e.target.checked,\r\n          [e.target.name]: e.target.checked\r\n        });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          [e.target.name]: e.target.checked\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormGroup row={row}>\r\n        {valueLabels && valueLabels.map(vLabel => (\r\n          <FormControlLabel\r\n            control={<Checkbox checked={values[vLabel]} onChange={handleChange} name={vLabel}/>}\r\n            label={vLabel}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </>\r\n  )\r\n}","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard\\SelectableTaskCard.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\SelectRandomTask.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\EditTask.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CustomPopover.js",["191"],"import { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport Button from \"@material-ui/core/Button\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\n\nconst useStyles = makeStyles({\n  root: {\n  },\n  selectAction: {\n    display: \"flex\",\n    flexFlow: \"column wrap\",\n  },\n});\n\nexport default function CustomPopover({ icon, actions, handleActionClick }) {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  if (icon === null) {\n    return (\n      <SvgIcon component={HourglassEmptyIcon} />\n    );\n  }\n\n  return (\n    <>\n      <SvgIcon component={icon} onClick={handleClick} />\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n      >\n        <div className={classes.selectAction}>\n          {actions.map((action) => (\n            <Button\n              value={action}\n              onClick={handleActionClick}\n              variant=\"contained\"\n              key={action}\n            >\n              {action}\n            </Button>\n          ))}\n        </div>\n      </Popover>\n    </>\n  );\n}\n","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\SearchBar.js",["192","193"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport TaskFilter from './TaskFilter';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n  }));\r\n  \r\n  export default function CustomizedInputBase() {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <Paper component=\"form\" className={classes.root}>\r\n        <TaskFilter />\r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder=\"Search Google Maps\"\r\n          inputProps={{ 'aria-label': 'search google maps' }}\r\n        />\r\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n    );\r\n  }","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskList.js",["194","195","196","197"],"import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport SportsFootballIcon from '@material-ui/icons/SportsFootball';\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibrary';\r\nimport AlarmIcon from '@material-ui/icons/Alarm';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n\r\n    }\r\n});\r\n\r\nexport default function TaskList({ list, handleClick }) {\r\n    return (\r\n        <>\r\n            <List>\r\n                {list && (\r\n                    list.map(task => (\r\n                        <ListItem button divider onClick={() => handleClick(task)} key={task.ID}>\r\n                            {task.TYPE ?\r\n                                <ListItemIcon>\r\n                                    {task.TYPE === 'EDUCATION' ?\r\n                                        <SchoolIcon />\r\n                                    : task.TYPE === 'SPORTS' ?\r\n                                        <SportsFootballIcon />\r\n                                    : task.TYPE === 'READING' ?\r\n                                        <LocalLibraryIcon />\r\n                                    : \r\n                                        <AlarmIcon />\r\n                                    }\r\n                                </ListItemIcon>\r\n                            :\r\n                                null\r\n                            }\r\n                            <ListItemText \r\n                                primary={task.NAME}\r\n                                secondary={task.DESCRIPTION}\r\n                            />\r\n                        </ListItem>\r\n                    ))\r\n                )}\r\n            </List>\r\n        </>\r\n    )\r\n}","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskFilter.js",["198"],"import { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n});\r\n\r\nexport default function TaskFilter() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        className={classes.iconButton}\r\n        aria-label=\"menu\"\r\n        onClick={handleClick}\r\n      >\r\n        <FilterListIcon />\r\n      </IconButton>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n      >\r\n        The content of the Popover.\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Task\\index.js",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":1,"column":10,"nodeType":"205","messageId":"206","endLine":1,"endColumn":19},{"ruleId":"203","severity":1,"message":"207","line":7,"column":7,"nodeType":"205","messageId":"206","endLine":7,"endColumn":14},{"ruleId":"203","severity":1,"message":"208","line":6,"column":23,"nodeType":"205","messageId":"206","endLine":6,"endColumn":37},{"ruleId":"203","severity":1,"message":"209","line":1,"column":10,"nodeType":"205","messageId":"206","endLine":1,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":1,"column":22,"nodeType":"205","messageId":"206","endLine":1,"endColumn":31},{"ruleId":"203","severity":1,"message":"210","line":8,"column":8,"nodeType":"205","messageId":"206","endLine":8,"endColumn":18},{"ruleId":"203","severity":1,"message":"211","line":9,"column":8,"nodeType":"205","messageId":"206","endLine":9,"endColumn":15},{"ruleId":"203","severity":1,"message":"212","line":10,"column":8,"nodeType":"205","messageId":"206","endLine":10,"endColumn":25},{"ruleId":"203","severity":1,"message":"213","line":13,"column":8,"nodeType":"205","messageId":"206","endLine":13,"endColumn":21},{"ruleId":"203","severity":1,"message":"214","line":53,"column":9,"nodeType":"205","messageId":"206","endLine":53,"endColumn":16},{"ruleId":"203","severity":1,"message":"215","line":75,"column":9,"nodeType":"205","messageId":"206","endLine":75,"endColumn":27},{"ruleId":"203","severity":1,"message":"216","line":82,"column":9,"nodeType":"205","messageId":"206","endLine":82,"endColumn":20},{"ruleId":"203","severity":1,"message":"217","line":86,"column":9,"nodeType":"205","messageId":"206","endLine":86,"endColumn":20},{"ruleId":"203","severity":1,"message":"218","line":91,"column":9,"nodeType":"205","messageId":"206","endLine":91,"endColumn":11},{"ruleId":"203","severity":1,"message":"209","line":1,"column":10,"nodeType":"205","messageId":"206","endLine":1,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":1,"column":22,"nodeType":"205","messageId":"206","endLine":1,"endColumn":31},{"ruleId":"203","severity":1,"message":"219","line":1,"column":33,"nodeType":"205","messageId":"206","endLine":1,"endColumn":41},{"ruleId":"203","severity":1,"message":"220","line":11,"column":9,"nodeType":"205","messageId":"206","endLine":11,"endColumn":16},{"ruleId":"203","severity":1,"message":"221","line":7,"column":8,"nodeType":"205","messageId":"206","endLine":7,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":66,"column":6,"nodeType":"224","endLine":66,"endColumn":20,"suggestions":"225"},{"ruleId":"203","severity":1,"message":"226","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":14},{"ruleId":"203","severity":1,"message":"227","line":7,"column":8,"nodeType":"205","messageId":"206","endLine":7,"endColumn":12},{"ruleId":"203","severity":1,"message":"228","line":8,"column":8,"nodeType":"205","messageId":"206","endLine":8,"endColumn":13},{"ruleId":"203","severity":1,"message":"229","line":14,"column":8,"nodeType":"205","messageId":"206","endLine":14,"endColumn":16},{"ruleId":"203","severity":1,"message":"230","line":15,"column":8,"nodeType":"205","messageId":"206","endLine":15,"endColumn":24},{"ruleId":"203","severity":1,"message":"231","line":16,"column":8,"nodeType":"205","messageId":"206","endLine":16,"endColumn":26},{"ruleId":"203","severity":1,"message":"232","line":85,"column":9,"nodeType":"205","messageId":"206","endLine":85,"endColumn":23},{"ruleId":"233","severity":1,"message":"234","line":95,"column":13,"nodeType":"235","endLine":95,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":96,"column":13,"nodeType":"235","endLine":96,"endColumn":17},{"ruleId":"203","severity":1,"message":"236","line":8,"column":8,"nodeType":"205","messageId":"206","endLine":8,"endColumn":19},{"ruleId":"203","severity":1,"message":"237","line":9,"column":8,"nodeType":"205","messageId":"206","endLine":9,"endColumn":18},{"ruleId":"222","severity":1,"message":"223","line":74,"column":6,"nodeType":"224","endLine":74,"endColumn":20,"suggestions":"238"},{"ruleId":"203","severity":1,"message":"239","line":36,"column":7,"nodeType":"205","messageId":"206","endLine":36,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":58,"column":6,"nodeType":"224","endLine":58,"endColumn":20,"suggestions":"240"},{"ruleId":"203","severity":1,"message":"208","line":60,"column":23,"nodeType":"205","messageId":"206","endLine":60,"endColumn":37},{"ruleId":"222","severity":1,"message":"241","line":63,"column":6,"nodeType":"224","endLine":63,"endColumn":8,"suggestions":"242"},{"ruleId":"203","severity":1,"message":"209","line":1,"column":31,"nodeType":"205","messageId":"206","endLine":1,"endColumn":41},{"ruleId":"203","severity":1,"message":"204","line":1,"column":10,"nodeType":"205","messageId":"206","endLine":1,"endColumn":19},{"ruleId":"203","severity":1,"message":"219","line":1,"column":21,"nodeType":"205","messageId":"206","endLine":1,"endColumn":29},{"ruleId":"203","severity":1,"message":"243","line":2,"column":10,"nodeType":"205","messageId":"206","endLine":2,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":1,"column":10,"nodeType":"205","messageId":"206","endLine":1,"endColumn":19},{"ruleId":"203","severity":1,"message":"244","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":15},{"ruleId":"203","severity":1,"message":"245","line":6,"column":8,"nodeType":"205","messageId":"206","endLine":6,"endColumn":16},{"ruleId":"203","severity":1,"message":"219","line":1,"column":10,"nodeType":"205","messageId":"206","endLine":1,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":1,"column":20,"nodeType":"205","messageId":"206","endLine":1,"endColumn":29},{"ruleId":"203","severity":1,"message":"246","line":11,"column":8,"nodeType":"205","messageId":"206","endLine":11,"endColumn":18},{"ruleId":"203","severity":1,"message":"247","line":13,"column":7,"nodeType":"205","messageId":"206","endLine":13,"endColumn":16},{"ruleId":"203","severity":1,"message":"246","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":18},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'API_URL' is assigned a value but never used.","'setAccessToken' is assigned a value but never used.","'useContext' is defined but never used.","'IconButton' is defined but never used.","'Popover' is defined but never used.","'AccountCircleIcon' is defined but never used.","'CustomPopover' is defined but never used.","'actions' is assigned a value but never used.","'handleAccountClick' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'id' is assigned a value but never used.","'useState' is defined but never used.","'classes' is assigned a value but never used.","'FormControlLabel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["250"],"'Button' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'TaskCard' is defined but never used.","'EditableTaskCard' is defined but never used.","'SelectableTaskCard' is defined but never used.","'handleAddTasks' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'NewTaskForm' is defined but never used.","'TaskRoller' is defined but never used.",["251"],"'appContext' is assigned a value but never used.",["252"],"React Hook useEffect has missing dependencies: 'appContext.tasks', 'duration', 'tod', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["253"],"'makeStyles' is defined but never used.","'Divider' is defined but never used.","'MenuIcon' is defined but never used.","'Typography' is defined but never used.","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},{"desc":"254","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [values, values.alert]",{"range":"260","text":"261"},{"range":"262","text":"261"},{"range":"263","text":"261"},"Update the dependencies array to be: [appContext.tasks, duration, tod, values]",{"range":"264","text":"265"},[1654,1668],"[values, values.alert]",[1829,1843],[1461,1475],[1580,1582],"[appContext.tasks, duration, tod, values]"]
[{"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\index.js":"1","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\reportWebVitals.js":"2","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\routes.js":"3","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppState.js":"4","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppContext.js":"5","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppReducer.js":"6","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\types.js":"7","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\hoc\\ProtectedRoute.js":"8","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Header\\index.js":"9","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\CreateProfile\\index.js":"10","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Analytics\\index.js":"11","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Login\\index.js":"12","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Tasks\\index.js":"13","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Home\\index.js":"14","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\SignUp\\index.js":"15","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Profile\\index.js":"16","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\hooks\\useLocalStorage.js":"17","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\httpRequests.js":"18","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\inputs.js":"19","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard.js":"20","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskRoller.js":"21","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\NewTaskForm.js":"22","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CountdownTimer.js":"23","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard\\EditableTaskCard.js":"24","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CheckboxOptions.js":"25","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard\\SelectableTaskCard.js":"26","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\SelectRandomTask.js":"27","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\EditTask.js":"28","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CustomPopover.js":"29","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\SearchBar.js":"30"},{"size":733,"mtime":1614916310752,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1606676319960,"results":"33","hashOfConfig":"32"},{"size":1073,"mtime":1629050748669,"results":"34","hashOfConfig":"32"},{"size":2397,"mtime":1624232262257,"results":"35","hashOfConfig":"32"},{"size":107,"mtime":1611098590920,"results":"36","hashOfConfig":"32"},{"size":1083,"mtime":1624232262249,"results":"37","hashOfConfig":"32"},{"size":270,"mtime":1624232262258,"results":"38","hashOfConfig":"32"},{"size":572,"mtime":1615777508908,"results":"39","hashOfConfig":"32"},{"size":3428,"mtime":1629051139276,"results":"40","hashOfConfig":"32"},{"size":294,"mtime":1624232262154,"results":"41","hashOfConfig":"32"},{"size":88,"mtime":1623382699718,"results":"42","hashOfConfig":"32"},{"size":4386,"mtime":1628974817541,"results":"43","hashOfConfig":"32"},{"size":3651,"mtime":1629088222357,"results":"44","hashOfConfig":"32"},{"size":6254,"mtime":1624232262163,"results":"45","hashOfConfig":"32"},{"size":4418,"mtime":1624232262190,"results":"46","hashOfConfig":"32"},{"size":86,"mtime":1623382699743,"results":"47","hashOfConfig":"32"},{"size":1278,"mtime":1614916310751,"results":"48","hashOfConfig":"32"},{"size":1912,"mtime":1623382699758,"results":"49","hashOfConfig":"32"},{"size":517,"mtime":1614916310749,"results":"50","hashOfConfig":"32"},{"size":1064,"mtime":1623382699708,"results":"51","hashOfConfig":"32"},{"size":3143,"mtime":1614287326782,"results":"52","hashOfConfig":"32"},{"size":5404,"mtime":1624232262152,"results":"53","hashOfConfig":"32"},{"size":531,"mtime":1614290562176,"results":"54","hashOfConfig":"32"},{"size":1912,"mtime":1623382699718,"results":"55","hashOfConfig":"32"},{"size":1282,"mtime":1624232262129,"results":"56","hashOfConfig":"32"},{"size":1132,"mtime":1623382699718,"results":"57","hashOfConfig":"32"},{"size":622,"mtime":1612296762463,"results":"58","hashOfConfig":"32"},{"size":91,"mtime":1623382699708,"results":"59","hashOfConfig":"32"},{"size":1655,"mtime":1628976177574,"results":"60","hashOfConfig":"32"},{"size":1403,"mtime":1629051496585,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"13sypig",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\index.js",[],["133","134"],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\reportWebVitals.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\routes.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppState.js",["135","136"],"import { useEffect, useReducer } from 'react';\r\n\r\nimport AppContext from './AppContext';\r\nimport AppReducer from './AppReducer';\r\nimport { ADD_TASK, DELETE_TASK, NEW_CURRENT_TASK, SET_GEN_DATA, SET_USER, SET_USER_DATA } from './types';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst AppState = (props) => {\r\n  let initialState = {\r\n    currentTask: null,\r\n    genData: null,\r\n    user: null,\r\n    userData: null,\r\n    tasks: [],\r\n  };\r\n\r\n  // No reason to use the dispatch yet,\r\n  // Refer to this article as a resource: https://medium.com/javascript-in-plain-english/how-to-use-react-context-api-with-functional-component-472f1d5e0851\r\n\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const addTask = (task) => {\r\n    dispatch({ type: ADD_TASK, payload: task })\r\n  }\r\n\r\n  const deleteTask = (task) => {\r\n    dispatch({ type: DELETE_TASK, payload: task })\r\n  }\r\n\r\n  const newCurrentTask = (task) => {\r\n    dispatch({ type: NEW_CURRENT_TASK, payload: task })\r\n  }\r\n  \r\n  const setGenData = (task) => {\r\n    dispatch({ type: SET_GEN_DATA, payload: task })\r\n  }\r\n\r\n  const setUser = (task) => {\r\n    dispatch({ type: SET_USER, payload: task })\r\n  }\r\n  \r\n  const setUserData = (task) => {\r\n    dispatch({ type: SET_USER_DATA, payload: task })\r\n  }\r\n  /* \r\n  useEffect(() => {\r\n    const genFetches = async () => {\r\n      let [resGenData] = await Promise.all([\r\n        fetch(API_URL + '/GenData').then(res => res.json())\r\n      ]).catch(err => console.log(err))\r\n\r\n      setGenData(resGenData);\r\n    }\r\n    genFetches();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (state.user === null || state.user === undefined) {\r\n      return;\r\n    }\r\n    const userFetches = async () => {\r\n      let [resUserData] = await Promise.all([\r\n        fetch(API_URL + '/UserData').then(res => res.json())\r\n      ]).catch(err => console.log(err))\r\n\r\n      setUserData(resUserData);\r\n    }\r\n    userFetches();\r\n  }, [state.user])\r\n  /* */\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        currentTask: state.currentTask,\r\n        genData: state.genData,\r\n        user: state.user,\r\n        userData: state.userData,\r\n        tasks: state.tasks,\r\n        addTask,\r\n        deleteTask,\r\n        newCurrentTask,\r\n        setGenData,\r\n        setUser,\r\n        setUserData\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppState;","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppContext.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\AppReducer.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\context\\types.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\hoc\\ProtectedRoute.js",["137"],"import { Route, Redirect } from 'react-router-dom';\r\n\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\nconst ProtectedRoute = ({ component: Component, rest }) => {\r\n  const [accessToken, setAccessToken] = useLocalStorage('token', null);\r\n\r\n  return (\r\n    <Route render={\r\n      rest => {\r\n        if (accessToken) {\r\n          return <Component {...rest} />\r\n        } else {\r\n          return <Redirect to={\r\n            {\r\n              pathname: '/login'\r\n            }\r\n          } />\r\n        }\r\n      }\r\n    } />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Header\\index.js",["138","139","140","141"],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\CreateProfile\\index.js",["142","143","144","145"],"import { useContext, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n\r\n  }\r\n})\r\n\r\nexport default function CreateProfile() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  )\r\n}","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Analytics\\index.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Login\\index.js",["146","147"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport AppContext from '../../context/AppContext';\r\n\r\nimport { PostData } from '../../helpers/httpRequests';\r\nimport { isNullOrEmptyOrWhitespace } from '../../helpers/inputs';\r\n\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: 'center',\r\n    padding: 100,\r\n  },\r\n  card: {\r\n    margin: 'auto',\r\n    width: '30%',\r\n    boxShadow: '10px 10px 10px 10px grey',\r\n  },\r\n  textFields: {\r\n    padding: 10,\r\n  },\r\n  submitButton: {\r\n    padding: 10,\r\n  },\r\n  signuplink: {\r\n    margin: 30,\r\n    color: 'blue',\r\n    textDecoration: 'underline',\r\n    '&:hover': {\r\n      cursor: 'pointer'\r\n    }\r\n  }\r\n});\r\n\r\nexport default function Login() {\r\n  let appContext = useContext(AppContext);\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    username: null,\r\n    password: null,\r\n    alert: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (values.alert === null) {\r\n      return;\r\n    }\r\n    toast[values.alert.type](values.alert.message);\r\n    setTimeout(() => {\r\n      setValues({\r\n        ...values,\r\n        alert: null,\r\n      });\r\n    }, 1000);\r\n  }, [values.alert]);\r\n\r\n  const [accessToken, setAccessToken] = useLocalStorage('token', null);\r\n\r\n  const handleLogin = () => {\r\n    if (accessToken) {\r\n      history.push(\"/\");\r\n      return;\r\n    } \r\n\r\n    if (isNullOrEmptyOrWhitespace(values.username)) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Username is not entered!' }\r\n      });\r\n      return;\r\n    } else if (isNullOrEmptyOrWhitespace(values.password)) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Password is not entered!' }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (values.username === 'fakename' && values.password === 'fakepassword') {\r\n      appContext.setUser({ USERNAME: values.username, PASSWORD: values.password })\r\n      login();\r\n      return;\r\n    }\r\n    \r\n    PostData('someURL', { USERNAME: values.username, PASSWORD: values.password })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.length === 1) {\r\n          appContext.setUser(res);\r\n          login();\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            alert: { type: 'error', message: 'Error occurred. Try again.' }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  const login = () => {\r\n    setAccessToken(true);\r\n    history.push('/');\r\n  }\r\n\r\n  const handleSignUp = () => {\r\n    history.push(\"/signup\");\r\n  }\r\n\r\n  if (accessToken) {\r\n    handleLogin();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <ToastContainer\r\n      position='bottom-left'\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={true}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n    />\r\n      <Card className={classes.card}>\r\n        <div className={classes.textFields}>\r\n          <TextField\r\n            value={values.username}\r\n            onChange={(e) => setValues({ ...values, username: e.target.value })}\r\n            label=\"Username\"\r\n            type=\"search\"\r\n            variant=\"outlined\"\r\n            />\r\n        </div>\r\n        <div className={classes.textFields}>\r\n          <TextField\r\n            value={values.password}\r\n            onChange={(e) => setValues({ ...values, password: e.target.value })}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            />\r\n        </div>\r\n        <div className={classes.submitButton}>\r\n          <Button \r\n            onClick={handleLogin}\r\n            variant=\"contained\"\r\n            >Login</Button>\r\n        </div>\r\n      </Card>\r\n      <div className={classes.signuplink} onClick={handleSignUp}>\r\n        No account? Sign Up!\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Tasks\\index.js",["148","149","150","151","152","153","154","155"],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Home\\index.js",["156","157","158"],"import { useState, useContext, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport NewTaskForm from '../../components/NewTaskForm';\r\nimport TaskRoller from '../../components/TaskRoller';\r\nimport CountdownTimer from '../../components/CountdownTimer';\r\nimport CheckboxOptions from '../../components/CheckboxOptions';\r\n\r\nimport AppContext from '../../context/AppContext';\r\nimport { PostData } from '../../helpers/httpRequests';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: 'center',\r\n    fontFamily: 'sans-serif',\r\n    fontSize: '30px',\r\n    height: '100%',\r\n  },\r\n  row: {\r\n    width: '100%',\r\n    height: 500,\r\n  },\r\n  options: {\r\n    marginLeft: '30%',\r\n    marginRight: '30%'\r\n  },\r\n  currentTaskColumn: {\r\n    backgroundColor: 'white',\r\n    borderRadius: '1.5rem',\r\n  },\r\n  currentTaskButtons: {},\r\n  currentTaskButtonC: {\r\n    margin: 10,\r\n    backgroundColor: 'green',\r\n    color: 'white',\r\n  },\r\n  currentTaskButtonF: {\r\n    margin: 10,\r\n    backgroundColor: 'red',\r\n    color: 'white',\r\n  },\r\n});\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const appContext = useContext(AppContext);\r\n\r\n  const [values, setValues] = useState({\r\n    taskNum: null,\r\n    duration: 60,\r\n    Anytime: false,\r\n    Morning: false,\r\n    Afternoon: false,\r\n    Night: false,\r\n    tod: [],\r\n    alert: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (values.alert === null) {\r\n      return;\r\n    }\r\n    toast[values.alert.type](values.alert.message);\r\n    setTimeout(() => {\r\n      setValues({\r\n        ...values,\r\n        alert: null,\r\n      });\r\n    }, 1000);\r\n  }, [values.alert]);\r\n\r\n  const handleDurationChange = (e, newValue) => {\r\n    setValues({\r\n      ...values,\r\n      duration: newValue,\r\n    });\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    if (!appContext.tasks) {\r\n      // Alert the user there is no tasks\r\n    } else {\r\n      let tod = [];\r\n\r\n      if (values.morning) {\r\n        tod.push('morning');\r\n      }\r\n      if (values.afternoon) {\r\n        tod.push('afternoon');\r\n      }\r\n      if (values.night) {\r\n        tod.push('night');\r\n      }\r\n      if (values.anytime) {\r\n        tod.push('anytime');\r\n      }\r\n\r\n      setValues({\r\n        ...values,\r\n        tod: tod,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTaskStatus = (status) => {\r\n    // status is a string, either \"completed\" or \"failed\"\r\n    let data = {};\r\n    data.user = appContext.user;\r\n    data.task = appContext.currentTask;\r\n    data.status = status;\r\n    PostData('someURL', data)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.length === 1) {\r\n          setValues({\r\n            ...values,\r\n            alert: { type: 'success', message: 'Task log recorded!' }\r\n          });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            alert: { type: 'error', message: 'Task log not recorded!' }\r\n          });\r\n        }\r\n      })\r\n\r\n    appContext.newCurrentTask(null);\r\n    /*  Need to make a task logged fetch request here,\r\n        record the task, the completion status, time left if failed, time left if completed,\r\n        current time */\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ToastContainer\r\n        position='bottom-left'\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={true}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <h1>Wondering what to do right now?</h1>\r\n      <div className={classes.row}>\r\n        {/*appContext.currentTask === null && values.taskTime ? (\r\n            <TaskRoller duration={values.duration} tod={values.tod} />\r\n        ) : ( */}\r\n            <div className={classes.options}>\r\n              <Slider\r\n                min={0}\r\n                step={30}\r\n                max={300}\r\n                marks\r\n                value={values.duration}\r\n                onChange={handleDurationChange}\r\n                valueLabelDisplay='auto'\r\n              />\r\n              <CheckboxOptions\r\n                row={true}\r\n                catchAllLabel='Anytime'\r\n                valueLabels={['Anytime', 'Morning', 'Afternoon', 'Night']}\r\n                values={values}\r\n                setValues={setValues}\r\n              />\r\n              <Button\r\n                disabled={\r\n                  appContext.tasks.length === 0 ||\r\n                  values.duration === 0 ||\r\n                  (values.anytime === false &&\r\n                    values.morning === false &&\r\n                    values.afternoon === false &&\r\n                    values.night === false)\r\n                }\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={handleClick}\r\n              >\r\n                Give me something to do!\r\n              </Button>\r\n            </div>\r\n      </div>\r\n      <div className={classes.row}>\r\n        {/* TODO: Timer over here with last task, if ongoing - time is counting down from the initial time that was given when created,\r\n            if ongoing (and 'Click Me' is pressed) - a red 'X' appears over the timer and task is reported as incompleted \r\n          if done (timer expired) - green checkmark shows and task is reported as completed*/}\r\n        {appContext.currentTask !== null ? (\r\n          <div className={classes.currentTaskColumn}>\r\n            <div>\r\n              <CountdownTimer time={appContext.currentTask.minutes} />\r\n            </div>\r\n            <div className={classes.currentTaskButtons}>\r\n              <Button\r\n                className={classes.currentTaskButtonC}\r\n                onClick={() => handleTaskStatus('completed')}\r\n              >\r\n                Completed\r\n              </Button>\r\n              <Button\r\n                className={classes.currentTaskButtonF}\r\n                onClick={() => handleTaskStatus('failed')}\r\n              >\r\n                Failed\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\SignUp\\index.js",["159","160","161"],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button'; \r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport AppContext from '../../context/AppContext';\r\n\r\nimport { PostData } from '../../helpers/httpRequests';\r\nimport { isNullOrEmptyOrWhitespace } from '../../helpers/inputs';\r\n\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textAlign: 'center',\r\n    padding: 100,\r\n  },\r\n  card: {\r\n    margin: 'auto',\r\n    width: '30%',\r\n    boxShadow: '10px 10px 10px grey',\r\n  },\r\n  textFields: {\r\n    padding: 10,\r\n  },\r\n  submitButton: {\r\n    padding: 10,\r\n  }\r\n});\r\n\r\nexport default function SignUp() {\r\n  let appContext = useContext(AppContext);\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    username: null,\r\n    password: null,\r\n    password2: null,\r\n    alert: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (values.alert === null) {\r\n      return;\r\n    }\r\n    toast[values.alert.type](values.alert.message);\r\n    setTimeout(() => {\r\n      setValues({\r\n        ...values,\r\n        alert: null,\r\n      });\r\n    }, 1000);\r\n  }, [values.alert]);\r\n\r\n  const [accessToken, setAccessToken] = useLocalStorage('token', null);\r\n\r\n  const handleSignUp = () => {\r\n    if (accessToken) {\r\n      history.push(\"/\");\r\n    } \r\n\r\n    if (isNullOrEmptyOrWhitespace(values.username)) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Username is not entered!' }\r\n      });\r\n      return; \r\n    } else if (isNullOrEmptyOrWhitespace(values.password)) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Password is not entered!' }\r\n      });\r\n      return; \r\n    } else if (isNullOrEmptyOrWhitespace(values.password2)) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Confirm Password is not entered!' }\r\n      });\r\n      return; \r\n    } else if (values.password !== values.password2) {\r\n      setValues({\r\n        ...values,\r\n        alert: { type: 'error', message: 'Passwords do not patch!' }\r\n      });\r\n      return; \r\n    }\r\n    \r\n    PostData('someURL', { USERNAME: values.username, PASSWORD: values.password })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          history.push('/createProfile');\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            alert: { type: 'error', message: 'Error occurred. Try again.' }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n  }\r\n\r\n  if (accessToken) {\r\n    handleSignUp();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ToastContainer\r\n        position='bottom-left'\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={true}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Card className={classes.card}>\r\n        <div className={classes.textFields}>\r\n          <TextField\r\n            value={values.username}\r\n            onChange={(e) => setValues({ ...values, username: e.target.value })}\r\n            label=\"Username\"\r\n            type=\"search\"\r\n            variant=\"outlined\"\r\n            />\r\n        </div>\r\n        <div className={classes.textFields}>\r\n          <TextField\r\n            value={values.password}\r\n            onChange={(e) => setValues({ ...values, password: e.target.value })}\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            />\r\n        </div>\r\n        <div className={classes.textFields}>\r\n          <TextField\r\n            value={values.password2}\r\n            onChange={(e) => setValues({ ...values, password2: e.target.value })}\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            />\r\n        </div>\r\n        <div className={classes.submitButton}>\r\n          <Button \r\n            onClick={handleSignUp}\r\n            variant=\"contained\"\r\n            >Sign Up</Button>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\containers\\Profile\\index.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\httpRequests.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\inputs.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskRoller.js",["162"],"import { useContext, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport AppContext from '../context/AppContext';\r\n\r\nimport { RandomTask } from '../helpers/SelectRandomTask';\r\n\r\n/**\r\n * Design Goals:\r\n *  - Need to have accept reject buttons span 100% across the card, dividing card in half\r\n *  - Have card centered\r\n *  - \r\n */\r\nconst useStyles = makeStyles({\r\n  root: {\r\n\r\n  },\r\n  accept: {\r\n    backgroundColor: 'green',\r\n    color: 'white'\r\n  },\r\n  reject: {\r\n    backgroundColor: 'red',\r\n    color: 'white'\r\n  }\r\n})\r\n\r\nexport default function TaskRoller({ duration, tod }) {\r\n  const classes = useStyles();\r\n  const appContext = useContext(AppContext);\r\n\r\n  const [values, setValues] = useState({\r\n    tasks: null,\r\n    taskNo: 0,\r\n  })\r\n\r\n  const handleAccept = () => {\r\n    let task = values.tasks[values.taskNo];\r\n    appContext.newCurrentTask(task);\r\n  }\r\n\r\n  const handleReject = () => {\r\n    setValues({\r\n      ...values,\r\n      taskNo: values.taskNo + 1,\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    let theTasks = RandomTask(appContext.tasks, duration, tod);\r\n    setValues({\r\n      ...values,\r\n      tasks: theTasks,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {values.tasks ?\r\n        values.taskNo !== values.tasks.length ?\r\n          <div>\r\n            <Card className={classes.root}>\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" >\r\n                  {values.tasks[values.taskNo].taskName}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {values.tasks[values.taskNo].minutes} minutes\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {values.tasks[values.taskNo].notes}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <IconButton className={classes.accept} onClick={handleAccept} color=\"primary\" aria-label=\"check\" component=\"span\">\r\n                  <DoneOutlineIcon />\r\n                </IconButton>\r\n                <IconButton className={classes.reject} onClick={handleReject} color=\"secondary\" aria-label=\"check\" component=\"span\">\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </CardActions>\r\n            </Card>\r\n          </div>\r\n          : \r\n          <div>\r\n            <Card className={classes.root}>\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  There are no more tasks available with these filters.\r\n                  Go read a book.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        : null\r\n      }\r\n    </>\r\n  )\r\n}","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\NewTaskForm.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CountdownTimer.js",["163"],"import { useState, useEffect, useContext } from 'react';\r\n\r\nexport default function CountdownTimer({ time }) {\r\n    const [timeLeft, setTimeLeft] = useState(time * 60);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setTimeLeft(timeLeft => timeLeft - 1);\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {Math.floor(timeLeft / 60)}:{(timeLeft % 60) < 10 ? '0' + (timeLeft % 60) : timeLeft % 60}\r\n        </div>\r\n    )\r\n}","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard\\EditableTaskCard.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CheckboxOptions.js",["164","165","166"],"import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function CheckboxOptions({ row, catchAllLabel, valueLabels, values, setValues }) {\r\n  const handleChange = e => {\r\n    if (e.target.name === catchAllLabel) {\r\n      let newValues = {}\r\n      valueLabels.forEach(vLabel => newValues[vLabel] = e.target.checked);\r\n      setValues({\r\n        ...values,\r\n        ...newValues\r\n      });\r\n    } else {\r\n      if (values[catchAllLabel]) {\r\n        setValues({\r\n          ...values,\r\n          [catchAllLabel]: e.target.checked,\r\n          [e.target.name]: e.target.checked\r\n        });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          [e.target.name]: e.target.checked\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormGroup row={row}>\r\n        {valueLabels && valueLabels.map(vLabel => (\r\n          <FormControlLabel\r\n            control={<Checkbox checked={values[vLabel]} onChange={handleChange} name={vLabel}/>}\r\n            label={vLabel}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n    </>\r\n  )\r\n}","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\TaskCard\\SelectableTaskCard.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\helpers\\SelectRandomTask.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\EditTask.js",[],"C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\CustomPopover.js",["167"],"import { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport Button from \"@material-ui/core/Button\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\n\nconst useStyles = makeStyles({\n  root: {},\n  selectAction: {\n    display: \"flex\",\n    flexFlow: \"column wrap\",\n  },\n});\n\nexport default function CustomPopover({ icon, actions, handleActionClick }) {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  if (icon === null) {\n    return (\n      <SvgIcon component={HourglassEmptyIcon} />\n    );\n  }\n\n  return (\n    <>\n      <SvgIcon component={icon} onClick={handleClick} />\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n      >\n        <div className={classes.selectAction}>\n          {actions.map((action) => (\n            <Button\n              value={action}\n              onClick={handleActionClick}\n              variant=\"contained\"\n              key={action}\n            >\n              {action}\n            </Button>\n          ))}\n        </div>\n      </Popover>\n    </>\n  );\n}\n","C:\\Users\\John Powen\\GIT\\KeepMeBusy\\kmb\\src\\components\\SearchBar.js",["168","169"],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":19},{"ruleId":"174","severity":1,"message":"178","line":7,"column":7,"nodeType":"176","messageId":"177","endLine":7,"endColumn":14},{"ruleId":"174","severity":1,"message":"179","line":6,"column":23,"nodeType":"176","messageId":"177","endLine":6,"endColumn":37},{"ruleId":"174","severity":1,"message":"180","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":1,"column":22,"nodeType":"176","messageId":"177","endLine":1,"endColumn":31},{"ruleId":"174","severity":1,"message":"181","line":1,"column":33,"nodeType":"176","messageId":"177","endLine":1,"endColumn":41},{"ruleId":"174","severity":1,"message":"182","line":58,"column":9,"nodeType":"176","messageId":"177","endLine":58,"endColumn":21},{"ruleId":"174","severity":1,"message":"180","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":1,"column":22,"nodeType":"176","messageId":"177","endLine":1,"endColumn":31},{"ruleId":"174","severity":1,"message":"181","line":1,"column":33,"nodeType":"176","messageId":"177","endLine":1,"endColumn":41},{"ruleId":"174","severity":1,"message":"183","line":11,"column":9,"nodeType":"176","messageId":"177","endLine":11,"endColumn":16},{"ruleId":"174","severity":1,"message":"184","line":7,"column":8,"nodeType":"176","messageId":"177","endLine":7,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":66,"column":6,"nodeType":"187","endLine":66,"endColumn":20,"suggestions":"188"},{"ruleId":"174","severity":1,"message":"189","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"190","line":12,"column":8,"nodeType":"176","messageId":"177","endLine":12,"endColumn":16},{"ruleId":"174","severity":1,"message":"191","line":13,"column":8,"nodeType":"176","messageId":"177","endLine":13,"endColumn":24},{"ruleId":"174","severity":1,"message":"192","line":14,"column":8,"nodeType":"176","messageId":"177","endLine":14,"endColumn":26},{"ruleId":"174","severity":1,"message":"193","line":53,"column":10,"nodeType":"176","messageId":"177","endLine":53,"endColumn":16},{"ruleId":"174","severity":1,"message":"194","line":53,"column":18,"nodeType":"176","messageId":"177","endLine":53,"endColumn":27},{"ruleId":"174","severity":1,"message":"195","line":71,"column":9,"nodeType":"176","messageId":"177","endLine":71,"endColumn":27},{"ruleId":"174","severity":1,"message":"196","line":77,"column":9,"nodeType":"176","messageId":"177","endLine":77,"endColumn":23},{"ruleId":"174","severity":1,"message":"197","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":19},{"ruleId":"174","severity":1,"message":"198","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":18},{"ruleId":"185","severity":1,"message":"186","line":74,"column":6,"nodeType":"187","endLine":74,"endColumn":20,"suggestions":"199"},{"ruleId":"174","severity":1,"message":"200","line":36,"column":7,"nodeType":"176","messageId":"177","endLine":36,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":58,"column":6,"nodeType":"187","endLine":58,"endColumn":20,"suggestions":"201"},{"ruleId":"174","severity":1,"message":"179","line":60,"column":23,"nodeType":"176","messageId":"177","endLine":60,"endColumn":37},{"ruleId":"185","severity":1,"message":"202","line":63,"column":6,"nodeType":"187","endLine":63,"endColumn":8,"suggestions":"203"},{"ruleId":"174","severity":1,"message":"180","line":1,"column":31,"nodeType":"176","messageId":"177","endLine":1,"endColumn":41},{"ruleId":"174","severity":1,"message":"175","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":19},{"ruleId":"174","severity":1,"message":"181","line":1,"column":21,"nodeType":"176","messageId":"177","endLine":1,"endColumn":29},{"ruleId":"174","severity":1,"message":"204","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":19},{"ruleId":"174","severity":1,"message":"205","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":15},{"ruleId":"174","severity":1,"message":"206","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":22},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'API_URL' is assigned a value but never used.","'setAccessToken' is assigned a value but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'handleLogout' is assigned a value but never used.","'classes' is assigned a value but never used.","'FormControlLabel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["209"],"'Button' is defined but never used.","'TaskCard' is defined but never used.","'EditableTaskCard' is defined but never used.","'SelectableTaskCard' is defined but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'handleTaskSelected' is assigned a value but never used.","'handleAddTasks' is assigned a value but never used.","'NewTaskForm' is defined but never used.","'TaskRoller' is defined but never used.",["210"],"'appContext' is assigned a value but never used.",["211"],"React Hook useEffect has missing dependencies: 'appContext.tasks', 'duration', 'tod', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["212"],"'makeStyles' is defined but never used.","'Divider' is defined but never used.","'DirectionsIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"213","fix":"215"},{"desc":"213","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [values, values.alert]",{"range":"219","text":"220"},{"range":"221","text":"220"},{"range":"222","text":"220"},"Update the dependencies array to be: [appContext.tasks, duration, tod, values]",{"range":"223","text":"224"},[1654,1668],"[values, values.alert]",[1829,1843],[1461,1475],[1580,1582],"[appContext.tasks, duration, tod, values]"]